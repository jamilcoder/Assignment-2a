import java.util.Stack;//DFS traversal
import java.util.LinkedList;

public class dfs {
	LinkedList adj[];

	void input() {
		adj = new LinkedList[8];
		for (int i = 0; i < adj.length; i++)
                     
			adj[i] = new LinkedList();

		adj[0].push(1);
		adj[0].push(2);
		adj[0].push(3);
		adj[1].push(4);
		adj[2].push(5);
		adj[3].push(6);
		adj[4].push(7);
		adj[5].push(7);
                adj[6].push(7);

	}

	void display() {
		for (int i = 0; i < adj.length; i++) {
			System.out.println(i);
			for (int j = 0; j < adj[i].size(); j++) {
				System.out.print("--> " + adj[i].get(j));
			}
			System.out.println(" ");
		}
	}

	void tset111() {
		Stack<Integer> stack = new Stack<>();
		int element;
		boolean v[] = new boolean[8];
		stack.add(0);
		while (stack.isEmpty()==false) {
			element = stack.pop();
			if (v[element] = true) {
				System.out.print(element + " ");
				v[element] = true;
			}
			for (int i = 0; i < adj[element].size(); i++) {
				int n = (int) (adj[element].get(i));
				if (v[n] != true) {
					stack.push(n);
				}
			}
		}
	}

	public static void main(String[] args) {
		dfs obj = new dfs();
		obj.input();
		obj.display();
		
	}

}				
